generator client {
  provider           = "prisma-client-js"
  migrationDirectory = "prisma/migrations"
}

datasource db {
  provider          = "postgresql"
  url               = env("DATABASE_URL")
}

model User {
  id         String    @id @default(cuid())
  email      String    @unique
  password   String
  role       String
  created_at DateTime  @default(now())
  updated_at DateTime  @updatedAt
  Customer   Customer?
}

model Customer {
  id          String      @id @default(cuid())
  user_id     String      @unique
  full_name   String
  city        String
  address     String
  postal_code String
  email       String
  phone       String
  photo       String?
  created_at  DateTime    @default(now())
  updated_at  DateTime    @updatedAt
  Bookings    Booking[]
  Cards       Card[]
  User        User        @relation(fields: [user_id], references: [id])
  Passengers  Passenger[]
}

model Card {
  id           String   @id @default(cuid())
  customer_id  String
  bank         String
  card_number  String
  expired_date DateTime
  cvv          String
  balance      Float
  created_at   DateTime @default(now())
  updated_at   DateTime @updatedAt
  Customer     Customer @relation(fields: [customer_id], references: [id])
}

model Ticket {
  id              String    @id @default(cuid())
  airlines        String
  departure_date  DateTime
  departure_city  String
  arrival_city    String
  departure_code  String
  arrival_code    String
  departure_time  DateTime
  arrival_time    DateTime
  flight_duration String
  class           String
  transit         String
  luggage         Boolean
  meal            Boolean
  wifi            Boolean
  price           Float
  created_at      DateTime  @default(now())
  updated_at      DateTime  @updatedAt
  Bookings        Booking[]
}

model Booking {
  id          String      @id @default(cuid())
  full_name   String
  email       String
  phone       String
  insurance   Boolean
  ticket_id   String
  customer_id String
  terminal    String
  gate        String
  code        String
  status      String
  qr          String
  total_price Float
  created_at  DateTime    @default(now())
  updated_at  DateTime    @updatedAt
  Customer    Customer    @relation(fields: [customer_id], references: [id])
  Ticket      Ticket      @relation(fields: [ticket_id], references: [id])
  Passengers  Passenger[]
}

model Passenger {
  id          String   @id @default(cuid())
  booking_id  String
  customer_id String
  title       String
  full_name   String
  nationality String
  created_at  DateTime @default(now())
  updated_at  DateTime @updatedAt
  Booking     Booking  @relation(fields: [booking_id], references: [id])
  Customer    Customer @relation(fields: [customer_id], references: [id])
}
